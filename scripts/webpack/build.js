// 1. ‚úì webpack
// 2. ‚úì –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ‚öôÔ∏è
// 3. —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–ø–∞–π–ª–µ—Ä webpack
// 4. –∑–∞–ø—É—Å–∫ üöÄ

// Core
const webpack = require('webpack');
const chalk = require('chalk'); // –†–∞—Å–∫—Ä–∞—à–∏–≤–∞–µ—Ç –∫–æ–Ω—Å–æ–ª—å

// Config
const config = require('./webpack.config');

const compiler = webpack(config);

compiler.run((error, stats) => {
    if (error) {
        // –æ—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        console.error(error.stack || error);

        if (error.details) {
            console.error(error.details);
        }

        return null;
    }

    console.log(chalk.greenBright('‚úì Build completed'));

    if (stats.hasErrors()) {
        // –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ (–±–∏—Ç—ã–π –∏–º–ø–æ—Ä—Ç, –æ—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞, etc)
        console.log(chalk.redBright('‚Üí Error!'));
        // console.error(info);
    }

    if (stats.hasWarnings()) {
        // –≤–æ—Ä–Ω–∏–Ω–≥ –≤–æ –≤—Ä–µ–º—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
        console.log(chalk.yellowBright('‚Üí Warning!'));
        // console.warn(info);
    }
});
